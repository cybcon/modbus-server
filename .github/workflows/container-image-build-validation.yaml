name:  container-image-build-validation
on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
      - reopened
jobs:
  container-build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GIT repository
        uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Test build
        uses: docker/build-push-action@v4.1.0
        with:
          push: false
          load: false
          context: .
          platforms: linux/amd64, linux/arm64
          tags: container-build:test
      - name: Test build and export for further validation
        uses: docker/build-push-action@v4.1.0
        with:
          push: false
          load: true
          context: .
          tags: container-build:test
          outputs: type=docker,dest=/tmp/container.tar
      - name: Upload container image as artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          name: container-build
          path: /tmp/container.tar

  function-test-preparation:
    name: Container functionality test preparation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout GIT repository
        uses: actions/checkout@v3
      - name: Enhance Dockerfile with test.json
        run: |
          echo "" >> Dockerfile
          echo "COPY /examples/test.json /test.json"
      - name: Log in to Github container registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Build container for functionality test
        uses: docker/build-push-action@v4.1.0
        with:
          push: true
          load: false
          context: .
          tags: ghcr.io/cybcon/modbus-server/modbus-server:test

  function-test-execution:
    name: Container functionality test execution
    needs: function-test-preparation
    runs-on: ubuntu-latest
    services:
      modbusserver:
        image: ghcr.io/cybcon/modbus-server/modbus-server:test
        env:
          CONFIG_FILE: /test.json
        ports:
          - 5020:5020
    steps:
      - name: Pull Modbus Client for functionality test
        run: |
          docker pull oitc/modbus-client:latest
          echo "# Modbus functionality test" >> ${GITHUB_STEP_SUMMARY}
      - name: Test Discrete Output Coils
        run: |
          echo "## Get Discrete Output Coils" >> ${GITHUB_STEP_SUMMARY}
          echo '```' >> ${GITHUB_STEP_SUMMARY}
          echo "docker run --rm oitc/modbus-client:latest -s modbusserver -p 5020 -t 1 -r 0 -l 10" >> ${GITHUB_STEP_SUMMARY}
          docker run --rm oitc/modbus-client:latest -s modbusserver -p 5020 -t 1 -r 0 -l 10 >> ${GITHUB_STEP_SUMMARY}
          echo '```' >> ${GITHUB_STEP_SUMMARY}
      - name: Test Discrete Output Coils
        run: |
          echo "## Get Discrete Input Contacts" >> ${GITHUB_STEP_SUMMARY}
          echo '```' >> ${GITHUB_STEP_SUMMARY}
          echo "docker run --rm oitc/modbus-client:latest -s modbusserver -p 5020 -t 2 -r 0 -l 10" >> ${GITHUB_STEP_SUMMARY}
          docker run --rm oitc/modbus-client:latest -s modbusserver -p 5020 -t 2 -r 0 -l 10 >> ${GITHUB_STEP_SUMMARY}
          echo '```' >> ${GITHUB_STEP_SUMMARY}
      - name: Test Analog Output Holding Register
        run: |
          echo "## Get Analog Output Holding Register" >> ${GITHUB_STEP_SUMMARY}
          echo '```' >> ${GITHUB_STEP_SUMMARY}
          echo "docker run --rm oitc/modbus-client:latest -s modbusserver -p 5020 -t 3 -r 0 -l 10" >> ${GITHUB_STEP_SUMMARY}
          docker run --rm oitc/modbus-client:latest -s modbusserver -p 5020 -t 3 -r 0 -l 10 >> ${GITHUB_STEP_SUMMARY}
          echo '```' >> ${GITHUB_STEP_SUMMARY}
      - name: Test Analog Input Register
        run: |
          echo "## Get Analog Input Register" >> ${GITHUB_STEP_SUMMARY}
          echo '```' >> ${GITHUB_STEP_SUMMARY}
          echo "docker run --rm oitc/modbus-client:latest -s modbusserver -p 5020 -t 4 -r 0 -l 10" >> ${GITHUB_STEP_SUMMARY}
          docker run --rm oitc/modbus-client:latest -s modbusserver -p 5020 -t 4 -r 0 -l 10 >> ${GITHUB_STEP_SUMMARY}
          echo '```' >> ${GITHUB_STEP_SUMMARY}


  scan:
    name: Container vulnerability scan
    needs: container-build
    uses: cybcon/github_workflows/.github/workflows/container-vulnerability-scan.yaml@v1.1.10
    with:
      image_name: container-build:test
      image_artifact_filename: container.tar
      image_artifact_name: container-build
      login_dockerhub: false
      trivy_tag: latest
